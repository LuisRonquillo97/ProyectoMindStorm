<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pUJCnQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btncerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAATCAYAAACdkl3yAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAOFJREFUOE+NlMENwjAQBCmBEiiBR+iDEvKmCGqghJTElx8lQAXHbvBG9vkc+zGS
        vbc3iiDKwcxWLtN00nkU7Bx1VrCADzhr0IMS8OQu7wwewBJDMnQk0d7CcM6CrgwzLyGzhkMyZKGEs7y0
        K8O5KSGbKJVDGdiVkEJEWHALX/ByWSEhxUWw6BZzKgmpAoGFmxOQe9QlYYiF6DchzVejClBsSUQoKy4o
        hP9OIs8qWVeSzXdlQxLBzHU22bBEcOa6q4wDfkLyQVMi2HE7b/9EXYlgN+38nyiFlF19uQd3KDGzww8Z
        lde5J8CKNwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnMinimizar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAVCAYAAABG1c6oAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAHdJREFUOE9j+P//P4OpiUkDFXACyCyQYQ5A/ABJglx8A4gdYAYeAJlOCQaZMWog
        doXE4iFuIJBvAFWADxug6QGJ4TQQJPafAHZA00NfAwWg4viwAJoe3AaSg0cNHAIGXoDSlOAzIBpkoAIQ
        g4pvkA2U4F2mJiYKABb2j/ibZ0PxAAAAAElFTkSuQmCC
</value>
  </data>
</root>